name: Tests

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize, labeled]
  push:
    branches: [main, master]

jobs:
  test:
    if: (github.event_name == 'push') ||
      (github.event_name == 'pull_request' && (github.event.pull_request.draft == false ||
      (github.event.action == 'labeled' && contains(github.event.pull_request.labels.*.name, 'testing'))))
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24.6', '1.24.5']

    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Download Go modules
        run: go mod download

      - name: Run pkg tests
        run: |
          go test -coverpkg=./... ./pkg/... -coverprofile=coverage-pkg-${{ matrix.go-version }}.out
          go tool cover -func=coverage-pkg-${{ matrix.go-version }}.out | tail -n 1

      - name: Run kernel & env tests
        run: |
          go test -coverpkg=./... ./metal/kernel ./metal/env -coverprofile=coverage-metal-env-${{ matrix.go-version }}.out
          go tool cover -func=coverage-metal-env-${{ matrix.go-version }}.out | tail -n 1

      - name: Run handlers tests
        run: |
          go test -coverpkg=./... ./handler/... -coverprofile=coverage-handler-${{ matrix.go-version }}.out
          go tool cover -func=coverage-handler-${{ matrix.go-version }}.out | tail -n 1

      - name: Run database tests
        run: |
          go test -coverpkg=./... ./database/... -coverprofile=coverage-database-${{ matrix.go-version }}.out
          go tool cover -func=coverage-database-${{ matrix.go-version }}.out | tail -n 1

      - name: Run CLI tests
        run: |
          go test -coverpkg=./... ./metal/cli/... -coverprofile=coverage-cli-${{ matrix.go-version }}.out
          go tool cover -func=coverage-cli-${{ matrix.go-version }}.out | tail -n 1

      - name: Merge coverage reports
        run: |
          echo "mode: set" > coverage-${{ matrix.go-version }}.out
          tail -q -n +2 coverage-*-${{ matrix.go-version }}.out >> coverage-${{ matrix.go-version }}.out
          go tool cover -func=coverage-${{ matrix.go-version }}.out | tail -n 1
