# This global options block explicitly disables Caddy's automatic HTTPS feature.
# This is the most reliable way to ensure Caddy acts as a simple HTTP proxy locally.
{
	auto_https off
}

# It tells Caddy to listen on its internal port 80 for any incoming hostname.
# Docker maps our host port (8080) to this container port.
:80 {
	# Define a logging format for easier debugging.
	log {
		output stdout
		format console
	}

	header {
		Access-Control-Allow-Origin "http://localhost:5173" # allows the Vue app (running on localhost:5173) to make requests.
		Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" # Specifies which methods are allowed.
		Access-Control-Allow-Headers "X-API-Key, X-API-Username, X-API-Signature, X-API-Timestamp, X-API-Nonce, X-Request-ID, Content-Type, User-Agent, If-None-Match, X-API-Intended-Origin" # allows the custom headers needed by the API.
		Access-Control-Expose-Headers "ETag, X-Request-ID"
	}

	# This handles the browser's "preflight" OPTIONS request.
	@preflight {
		method OPTIONS
		header Origin *
	}

	handle @preflight {
		# Reflect the Origin back so it's always allowed
		header Access-Control-Allow-Origin "{http.request.header.Origin}"
		header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
		header Access-Control-Allow-Headers "X-API-Key, X-API-Username, X-API-Signature, X-API-Timestamp, X-API-Nonce, X-Request-ID, Content-Type, User-Agent, If-None-Match, X-API-Intended-Origin"
		header Access-Control-Max-Age "86400"
		respond 204
	}

	@early_hints {
		method GET HEAD
		expression {env.EARLY_HINTS_LINKS} != ""
	}

	# Reverse proxy all incoming requests to the 'api' service.
	# 	- The service name 'api' is resolved by Docker's internal DNS to the correct container IP on the 'caddy_net' network.
	# 	- The API container listens on port 8080 (from the ENV_HTTP_PORT).
	reverse_proxy api:8080 {
		handle_response @early_hints {
			respond 103 {
				header Link {env.EARLY_HINTS_LINKS}
			}

			copy_response
		}
	}
}
